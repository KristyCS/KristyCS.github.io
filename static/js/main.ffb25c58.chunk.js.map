{"version":3,"sources":["App.js","context/Modal.js","index.js"],"names":["App","ModalContext","React","createContext","ModalProvider","children","modalRef","useRef","useState","value","setValue","useEffect","current","Provider","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LASeA,MARf,WACE,OACE,mCACE,0C,OCAAC,G,MAAeC,IAAMC,iBAEpB,SAASC,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SACxBC,EAAWC,mBACjB,EAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KAMA,OAJAC,qBAAU,WACRD,EAASJ,EAASM,WACjB,IAGD,qCACE,cAACX,EAAaY,SAAd,CAAuBJ,MAAOA,EAA9B,SACGJ,IAEH,qBAAKS,IAAKR,OCZhBS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,UACE,cAAC,EAAD,QAGJc,SAASC,eAAe,U","file":"static/js/main.ffb25c58.chunk.js","sourcesContent":["// import\nfunction App() {\n  return (\n    <>\n      <p>Kristy</p>\n    </>\n  );\n}\n\nexport default App;\n","import React, { useContext, useRef, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst ModalContext = React.createContext();\n\nexport function ModalProvider({ children }) {\n  const modalRef = useRef();\n  const [value, setValue] = useState();\n\n  useEffect(() => {\n    setValue(modalRef.current);\n  }, [])\n\n  return (\n    <>\n      <ModalContext.Provider value={value}>\n        {children}\n      </ModalContext.Provider>\n      <div ref={modalRef} />\n    </>\n  );\n}\n\nexport function Modal({ onClose, children }) {\n  const modalNode = useContext(ModalContext);\n  if (!modalNode) return null;\n\n  return ReactDOM.createPortal(\n    <div id=\"modal\">\n      <div id=\"modal-background\" onClick={onClose} />\n      <div id=\"modal-content\">\n        {children}\n      </div>\n    </div>,\n    modalNode\n  );\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ModalProvider } from \"./context/Modal\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ModalProvider>\n      <App />\n    </ModalProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}